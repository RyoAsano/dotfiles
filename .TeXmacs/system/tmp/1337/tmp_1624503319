(document (TeXmacs "1.99.4") (style (tuple "tmdoc" "english")) (body (document (tmdoc-title "Mathematical formulas") (concat "One of the main purposes of " (TeXmacs) " is to edit mathematical formulas. If the cursor is inside a" (nbsp) "formula (" (abbr "i.e.") " inside math mode), then the mode sensitive menus and toolbars provide buttons for entering common mathematical constructs. Similarly, as will be detailed in this section, the bahaviour of the keyboard changes so as to allow for the rapid typing of mathematical symbols. For instance, typing " (key "- <gtr>") " inserts the arrow " (math "<rightarrow>") ".") (concat "Starting with version 1.0.7.10, " (TeXmacs) " also incorporates several features for the semantic editing of mathematical formulas, which will be described at the end of this section. When used appropriately, this allows you to write documents in which all formulas are at least correct from a syntactical point of view. A syntax corrector is included to assist you with this task. Documents with more semantics are for instance useful when using formulas as inputs for a computer algebra system. Such documents are also less likely to contain typos. Other interesting features, such as semantic search and replace, should be developed in the feature.") (section "Incorporating mathematical formulas into documents") (concat (TeXmacs) " provides three main ways in order to enter a mathematical formulas into the main text:") (description (document (item* (concat (menu "Insert" "Mathematics" "Inline formula") " or " (key "$"))) (concat "This entry corresponds to small " (em "inline formulas") " like " (math (concat "a" (rsup "2") "+b" (rsup "2") "=c" (rsup "2"))) " inside a textual paragraph. Note that formulas are typeset specially so they do not take too much vertical space. For example, limits are always displayed on the right. Limits can be displayed below in formulas with " (menu "Format" "Display style" "on") ". In formulas, formula style is off by default.") (item* (concat (menu "Insert" "Mathematics" "Displayed formula") " or " (shortcut "(make-equation*)"))) (concat "This entry is used for entering bigger " (em "displayed equations") ", like") (equation* (document (concat "x" (rsup "n") "+y" (rsup "n") "=z" (rsup "n") ","))) (concat "which are typeset in a paragraph of their own. You may use the shortcut " (shortcut "(numbered-toggle (focus-tree))") " in order to give the equation a number (or to remove the number of an equation). Also, " (shortcut "(variant-circulate (focus-tree) #t)") " allows you to switch between inline formulas and displayed equations.") (item* (concat (menu "Insert" "Mathematics" "Several equations") " or " (shortcut "(make-eqnarray*)"))) (concat "This entry allows you to create an " (markup "eqnarray*") ", a three columns wide table-like environment (see " (hlink "creating tables" "table/man-create-table.en.tm") "). This environment is typically used for lists of multiple relations like") (eqnarray* (document (tformat (table (row (cell "x+0") (cell "=") (cell "x")) (row (cell (concat "x+" (around "(" "<um>x" ")"))) (cell "=") (cell "0")) (row (cell "x+y") (cell "=") (cell "y+x")) (row (cell (concat (around "(" "x+y" ")") "+z")) (cell "=") (cell (concat "x+" (around "(" "y+z" ")")))))))) (concat "The first column is centered to the right, the second one at the middle and the last one at the left. An other typical use of the " (markup "eqnarray*") " environment is a step by step computation") (eqnarray* (document (tformat (table (row (cell (concat (around* "(" (concat "<mathe>" (rsup "sin x") "+sin <mathe>" (rsup "x")) ")") (rprime "'"))) (cell "=") (cell (concat (around* "(" (concat "<mathe>" (rsup "sin x")) ")") (rprime "'") "+" (around* "(" (concat "sin <mathe>" (rsup "x")) ")") (rprime "'")))) (row (cell "") (cell "=") (cell (concat (around "(" "sin x" ")") (rprime "'") "*<mathe>" (rsup "sin x") "+" (around* "(" (concat "<mathe>" (rsup "x")) ")") (rprime "'") "*sin <mathe>" (rsup "x")))) (row (cell "") (cell "=") (cell (concat "<mathe>" (rsup "sin x") "*cos x+<mathe>" (rsup "x") "*sin <mathe>" (rsup "x") ","))))))) "in which many entries of the left column are left open.")) (section "Typing mathematical symbols") (concat "The Greek characters are obtained in " (TeXmacs) " using the " (prefix "math:greek") "-key. For instance, " (key "math:greek a") " yields" (nbsp) (math "<alpha>") " and " (key "math:greek G") " yields " (math "<Gamma>") ". Similarly, " (prefix "math:bold") ", " (prefix "math:cal") ", " (prefix "math:frak") " and " (prefix "math:bbb") " can be used in order to type bold, calligraphic, fraktur and blackboard bold characters. For instance, " (shortcut "<frak-m>") " yields" (nbsp) (math "<frak-m>") ", " (key "S-F6 R") " yields" (nbsp) (math "<bbb-R>") " and " (shortcut "<b-cal-Z>") " yields " (math "<b-cal-Z>") ".") (concat "Greek characters can also be obtained as variants of Latin characters using the " (key "var") "-key. For instance, " (key "p var") " yields " (math "<pi>") ". The " (key "var") "-key is also used for obtaining variants of the Greek letters themselves. For instance, both " (key "math:greek p var") " and " (key "p var var") " yield " (math "<varpi>") ". An alternative way to enter blackboard bold characters is to type the same capital twice. For instance, " (key "Z Z") " yields" (nbsp) (math "<bbb-Z>") ".") (concat "Some symbols admit many variants. For instance, " (key "<less>") " yields " (math "<less>") ", " (key "<less> var") " yields " (math "<in>") ", " (key "<less> var var") " yields " (math "<subset>") ", " (key "<less> var var var") " yields " (math "<prec>") ", and so on. You may cycle back among the variants using" (nbsp) (key "S-var") ". For instance, " (key "<less> var var S-var") " is equivalent to " (key "<less> var") ".") (concat "Many other mathematical symbols are obtained by natural key-combinations. For instance, " (key "- <gtr>") " yields " (math (op "<rightarrow>")) ", " (key "- - <gtr>") " yields " (math (op "<longrightarrow>")) " and " (key "<gtr> =") " yields " (math (op "<geqslant>")) ". Similarly, " (key "| var -") " yields " (math (op "<vdash>")) ", " (key "| - <gtr>") " yields " (math (op "<mapsto>")) " and " (key "- <gtr> <less> -") " yields " (math (op "<rightleftarrows>")) ". The following general rules hold in order to enter mathematical symbols:") (description (document (concat (item* (key "tab")) "is the main key for obtaining variants. For instance, " (key "<gtr> =") " yields " (math (op "<geqslant>")) ", but " (key "<gtr> = var") " yields" (nbsp) (math (op "<geq>")) ". Similarly, " (key "<less> var var") " yields " (math (op "<subset>")) ", " (key "<less> var var =") " yields " (math (op "<subseteq>")) " and " (key "<less> var var = var") " yields " (math (op "<subseteqq>")) ". Also, " (key "P var") " yields" (nbsp) (math "<wp>") " and " (key "e var") " yields the constant " (math (concat "<mathe>=exp" (around "(" "1" ")"))) ".") (concat (item* (key "@")) "is used for putting symbols into circles or boxes. For instance, " (key "@ +") " yields " (math (op "<oplus>")) " and " (key "@ x") " yields " (math (op "<otimes>")) ". Similarly, " (key "@ var +") " yields " (math (op "<boxplus>")) ".") (concat (item* (key "/")) "is used for negations. For instance, " (key "= /") " yields " (math (op "<neq>")) " and " (key "<less> = /") " yields " (math (neg "<leqslant>")) ". Notice that " (key "<less> = var var /") " yields " (math (op "<nleqq>")) ", while " (key "<less> = var var / var") " yields " (math (op "<lneqq>")) ".") (concat (item* (key "!")) "is used after arrows in order to force scripts to be placed above or below the arrow. For instance, " (key "- - <gtr> ^ x") " yields " (math (op (concat "<longrightarrow>" (rsup "x") " "))) ", but " (key "- - <gtr> ! ^ x") " yields " (math (concat "<longrightarrowlim>" (rsup "x"))) "."))) (concat "The logical relations " (math "<wedge>") " and " (math "<vee>") " are obtained using " (key "&") " and " (key "%") ". The operators " (math "<cap>") " and " (math "<cup>") " are natural variants " (key "& var") " and " (key "% var") ". Various miscellaneous symbols can be optained using the " (prefix "math:symbol") " prefix.") (concat "Notice that certain symbols with a different mathematical meaning are sometimes denoted in a" (nbsp) "similar way; such symbols are called " (em "homoglyphs") ". For instance, the vertical bar " (math "|") " can be used as a" (nbsp) "separator for defining sets " (math (concat "R" (rsup "<gtr>") "=" (around* "{" "x<in>R|x<gtr>0" "}"))) ", but also as the binary relation divides" (nbsp) (rigid (math "11<divides>1001")) ". Often, but not always, homoglyphs admit a different spacing. The most annoying ambiguity is between invisible multiplication " (math "x*y") " and function application " (math "sin x") ", which are entered using the shortcuts " (key "*") " " (abbr "resp.") " " (key "space") ".") (concat "In order to facilitate certain automated treatments of your documents, such as mathematical syntax checking, we incite authors to pay attention to the homoglyph problem when entering formulas. For more information on this issue and how " (TeXmacs) " can assist you to use the appropriate notations, we refer to our section on the " (hlink "semantics of mathematical symbols" "semantics/man-semantics-symbols.en.tm") ".") (section "Main mathematical constructs") (concat "The main mathematical objects are created using the " (key "math") " prefix as follows:") (big-table (descriptive-table (tformat (table (row (cell "Shortcut") (cell "Purpose") (cell "Example")) (row (cell (key "math $")) (cell "Text") (cell (math (concat "L=" (around "{" (concat "x|x" (text " is sufficiently large")) "}"))))) (row (cell (key "math f")) (cell "Fractions") (cell (math (frac "a" "b+c")))) (row (cell (key "math s")) (cell "Square roots") (cell (math (sqrt "x+y")))) (row (cell (key "math S")) (cell (concat (math "n") "-th Roots")) (cell (math (sqrt (concat "x" (rsup "3") "+y" (rsup "3")) "3")))) (row (cell (key "math n")) (cell "Negations") (cell (math (neg (frac "a" "b+c")))))))) "Creation of major mathematical markup.") "Primes, subscripts and superscripts are created as follows:" (big-table (descriptive-table (tformat (table (row (cell "Shortcut") (cell "Purpose") (cell "Example")) (row (cell (key "'")) (cell "Primes") (cell (concat (math (concat "f" (rprime "'"))) " or " (math (concat (around "(" "g+h" ")") (rprime "'''")))))) (row (cell (key "`")) (cell "Back-primes") (cell (math (concat (lprime "`") "f")))) (row (cell (key "_")) (cell "Subscripts") (cell (concat (math (concat "x" (rsub "n"))) " or " (math (concat "x" (rsub (concat "i" (rsub "3")))))))) (row (cell (key "^")) (cell "Superscripts") (cell (concat (math (concat "x" (rsup "2"))) ", " (math (concat "x" (rsub "n") (rsup "2"))) " or " (math (concat "<mathe>" (rsup (concat "<mathe>" (rsup "x")))))))) (row (cell (key "math l _")) (cell "Left subscripts") (cell (math (concat (lsub "2") "x")))) (row (cell (key "math l ^")) (cell "Left superscripts") (cell (concat (math (concat (lsup "<pi>") "x")) " or " (math (concat (lsub "<ast>") (lsup "<ast>") "He" (rsub "<ast>") (rsup "<ast>"))))))))) "Creation of primes, subscripts and superscripts") (concat "Some important mathematical constructs are actually " (hlink "tabular constructs" "../table/man-create-table.en.tm") " and are documented separately.") (section "Typing large delimiters") (concat "Brackets inside mathematical formulas should always match: as soon as you enter an opening bracket (" (math "") ", " (TeXmacs) " will automatically insert the matching closing bracket " (math "") "). You may disable this feature using " (menu "Edit" "Preferences" "Keyboard" "Automatic brackets" "Disable") ". Attention (see also below): brackets in old documents will be automatically be upgraded to matching brackets.") (concat "Sometimes, you do not want the closing bracket, or you may want to replace it by another closing bracket. No problem: if your cursor is just before the closing bracket inside " (math (around "(" (concat "a,b" (cursor)) ")")) ", then pressing" (nbsp) (key "]") " will turn the expression into " (math (concat (around "(" "a,b" "]") (cursor))) ". Alternatively, deletion of a bracket will actually turn it into an " (hlink "invisible bracket" "semantics/man-semantics-symbols.en.tm#nobracket") ", after which you can replace it by an arbitrary opening or closing bracket.") (concat "By default, the sizes of the brackets are adjusted to the expression between the brackets. Small delimiters, which are created using the " (prefix "math:small") "-prefix, keep their sizes independently of the enclosed expression. Alternatively, you may use " (shortcut "(alternate-toggle (focus-tree))") " in order to toggle between large and small delimiters.") (concat "For some delimiters, such as " (math "|") ", the opening and closing delimiters coincide. For instance, entering a vertical bar " (key "|") " will produce an absolute value. The (small) bar-separator " (math "|") " is obtained using " (shortcut "|") ", or as a variant using " (key "| var") ". The big bar-separator is entered using " (shortcut "(math-separator \"|\" #t)") ". In " (TeX) " and " (LaTeX) ", such large separators do not exist; they are used for producing the vertical bars in formulas like") (equation* (document (concat (around* "<langle>" (concat (frac "a" "b+c") (mid "|") (frac "p" "q+r") (mid "|") (frac "a" "b+c")) "<rangle>") "."))) (concat "There may be as many middle delimiters between a left and a right delimiter as one wishes. Notice that there are still another number of variants of vertical bars. For instance, the binary relation divides is entered using " (shortcut "<divides>") " or " (key "| var var var var") ".") (concat "In " (TeXmacs) ", large delimiters may either be left delimiters, right delimiters or middle delimiters. By default, " (math "(,[,{") " and " (math "<langle>") " are left delimiters, " (math "),],}") " and " (math "<rangle>") " are right delimiters. But there status can be changed using the " (prefix "math:left") ", " (prefix "math:right") " and " (prefix "math:middle") " key combinations. For instance, " (key "math:left )") " produces " (math ")") ", considered as a large left delimiter.") (concat "Sometimes you may want large delimiters of a particular size, instead of self-adjusting ones. This can be achieved by resizing the expression in between the brackets using the items in " (menu "Format" "Adjust") ".") (concat "Notice that it is possible to insert a pair of invisible brackets using " (shortcut "(math-bracket-open \".\" \".\" #t)") ". This is for instance useful in computational contexts, in which formulas should admit a precise, not merely visual semantics. Alternatively, one may put the formula inside a rigid box using" (nbsp) (shortcut "(make-rigid)") ", which additionally prevents the formula from being hyphenated.") (section "Typing big operators") "The following key-combinations are used in order to create big symbols:" (big-table (document (descriptive-table (tformat (cwith "3" "7" "2" "2" "cell-halign" "c") (cwith "3" "7" "4" "4" "cell-halign" "c") (cwith "4" "7" "1" "1" "cell-rborder" "0.5ln") (cwith "4" "7" "1" "1" "cell-bborder" "0.5ln") (cwith "4" "7" "1" "1" "cell-lborder" "0.5ln") (cwith "3" "7" "1" "1" "cell-lsep" "1spc") (cwith "3" "7" "1" "1" "cell-rsep" "1spc") (cwith "3" "7" "1" "1" "cell-bsep" "1spc") (cwith "3" "7" "1" "1" "cell-tsep" "1spc") (cwith "5" "5" "1" "1" "cell-rborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-bborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-lborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-lsep" "1spc") (cwith "5" "5" "1" "1" "cell-rsep" "1spc") (cwith "5" "5" "1" "1" "cell-bsep" "1spc") (cwith "5" "5" "1" "1" "cell-tsep" "1spc") (cwith "3" "3" "1" "1" "cell-rborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-bborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lsep" "1spc") (cwith "3" "3" "1" "1" "cell-rsep" "1spc") (cwith "3" "3" "1" "1" "cell-bsep" "1spc") (cwith "3" "3" "1" "1" "cell-tsep" "1spc") (cwith "3" "3" "1" "1" "cell-rborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-bborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lsep" "1spc") (cwith "3" "3" "1" "1" "cell-rsep" "1spc") (cwith "3" "3" "1" "1" "cell-bsep" "1spc") (cwith "3" "3" "1" "1" "cell-tsep" "1spc") (cwith "4" "7" "3" "3" "cell-rborder" "0.5ln") (cwith "4" "7" "3" "3" "cell-bborder" "0.5ln") (cwith "3" "7" "3" "3" "cell-lsep" "1spc") (cwith "3" "7" "3" "3" "cell-rsep" "1spc") (cwith "3" "7" "3" "3" "cell-bsep" "1spc") (cwith "3" "7" "3" "3" "cell-tsep" "1spc") (cwith "5" "5" "3" "3" "cell-rborder" "0.5ln") (cwith "5" "5" "3" "3" "cell-bborder" "0.5ln") (cwith "5" "5" "3" "3" "cell-lsep" "1spc") (cwith "5" "5" "3" "3" "cell-rsep" "1spc") (cwith "5" "5" "3" "3" "cell-bsep" "1spc") (cwith "5" "5" "3" "3" "cell-tsep" "1spc") (cwith "3" "3" "3" "3" "cell-rborder" "0.5ln") (cwith "3" "3" "3" "3" "cell-bborder" "0.5ln") (cwith "3" "3" "3" "3" "cell-lsep" "1spc") (cwith "3" "3" "3" "3" "cell-rsep" "1spc") (cwith "3" "3" "3" "3" "cell-bsep" "1spc") (cwith "3" "3" "3" "3" "cell-tsep" "1spc") (cwith "3" "3" "3" "3" "cell-rborder" "0.5ln") (cwith "3" "3" "3" "3" "cell-bborder" "0.5ln") (cwith "3" "3" "3" "3" "cell-lsep" "1spc") (cwith "3" "3" "3" "3" "cell-rsep" "1spc") (cwith "3" "3" "3" "3" "cell-bsep" "1spc") (cwith "3" "3" "3" "3" "cell-tsep" "1spc") (cwith "2" "2" "2" "2" "cell-halign" "c") (cwith "2" "2" "4" "4" "cell-halign" "c") (cwith "2" "2" "1" "1" "cell-lsep" "1spc") (cwith "2" "2" "1" "1" "cell-rsep" "1spc") (cwith "2" "2" "1" "1" "cell-bsep" "1spc") (cwith "2" "2" "1" "1" "cell-tsep" "1spc") (cwith "2" "2" "1" "1" "cell-rborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-bborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-lborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-lsep" "1spc") (cwith "2" "2" "1" "1" "cell-rsep" "1spc") (cwith "2" "2" "1" "1" "cell-bsep" "1spc") (cwith "2" "2" "1" "1" "cell-tsep" "1spc") (cwith "2" "2" "1" "1" "cell-rborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-bborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-lborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-lsep" "1spc") (cwith "2" "2" "1" "1" "cell-rsep" "1spc") (cwith "2" "2" "1" "1" "cell-bsep" "1spc") (cwith "2" "2" "1" "1" "cell-tsep" "1spc") (cwith "2" "2" "3" "3" "cell-lsep" "1spc") (cwith "2" "2" "3" "3" "cell-rsep" "1spc") (cwith "2" "2" "3" "3" "cell-bsep" "1spc") (cwith "2" "2" "3" "3" "cell-tsep" "1spc") (cwith "2" "2" "3" "3" "cell-rborder" "0.5ln") (cwith "2" "2" "3" "3" "cell-bborder" "0.5ln") (cwith "2" "2" "3" "3" "cell-lsep" "1spc") (cwith "2" "2" "3" "3" "cell-rsep" "1spc") (cwith "2" "2" "3" "3" "cell-bsep" "1spc") (cwith "2" "2" "3" "3" "cell-tsep" "1spc") (cwith "2" "2" "3" "3" "cell-rborder" "0.5ln") (cwith "2" "2" "3" "3" "cell-bborder" "0.5ln") (cwith "2" "2" "3" "3" "cell-lsep" "1spc") (cwith "2" "2" "3" "3" "cell-rsep" "1spc") (cwith "2" "2" "3" "3" "cell-bsep" "1spc") (cwith "2" "2" "3" "3" "cell-tsep" "1spc") (cwith "1" "1" "2" "2" "cell-halign" "c") (cwith "1" "1" "4" "4" "cell-halign" "c") (cwith "1" "-1" "2" "2" "cell-rborder" "1ln") (table (row (cell "Shortcut") (cell "Result") (cell "Shortcut") (cell "Result")) (row (cell (key "symbol I")) (cell (math (with "math-display" "true" (big "int")))) (cell (key "symbol O")) (cell (math (with "math-display" "true" (big "oint"))))) (row (cell (key "symbol P")) (cell (math (with "math-display" "true" (big "prod")))) (cell (key "symbol A")) (cell (math (with "math-display" "true" (big "amalg"))))) (row (cell (key "symbol S")) (cell (math (with "math-display" "true" (big "sum")))) (cell (key "symbol @ +")) (cell (math (with "math-display" "true" (big "oplus"))))) (row (cell (key "symbol @ x")) (cell (math (with "math-display" "true" (big "otimes")))) (cell (key "symbol @ .")) (cell (math (with "math-display" "true" (big "odot"))))) (row (cell (key "symbol U")) (cell (math (with "math-display" "true" (big "cup")))) (cell (key "symbol N")) (cell (math (with "math-display" "true" (big "cap"))))) (row (cell (key "symbol V")) (cell (math (with "math-display" "true" (big "vee")))) (cell (key "symbol W")) (cell (math (with "math-display" "true" (big "wedge"))))))))) "Big mathematical operators.") "The scopes of big operators are indicated visually, through the light cyan boxes around the tags which contain the cursor." "The big integral signs admit two variants, depending on where you want to place subscripts and superscripts. By default, the scripts are placed as follows:" (equation* (document (concat (big "int") (rsub "0") (rsup "<infty>") (frac "<mathd> x" (concat "1+x" (rsup "2"))) "."))) "The alternative rendering with limits" (equation* (document (concat (big "intlim") (rsub "0") (rsup "<infty>") (frac "<mathd> x" (concat "1+x" (rsup "2"))) "."))) (concat "is obtained using " (key "symbol L I") ". Similarly, you may type " (key "symbol L O") " in order to obtain " (math (big "oint")) " with limits.") (section "Wide mathematical accents") "The table below how to type mathematical accents above symbols or entire formulas. Indeed, some of these accents automatically become as wide as the formulas below them." (big-table (document (descriptive-table (tformat (cwith "3" "8" "3" "3" "cell-halign" "c") (cwith "3" "8" "5" "5" "cell-halign" "c") (cwith "4" "8" "1" "1" "cell-rborder" "0.5ln") (cwith "4" "8" "1" "1" "cell-bborder" "0.5ln") (cwith "4" "8" "1" "1" "cell-lborder" "0.5ln") (cwith "3" "8" "1" "1" "cell-lsep" "1spc") (cwith "3" "8" "1" "1" "cell-rsep" "1spc") (cwith "3" "8" "1" "1" "cell-bsep" "1spc") (cwith "3" "8" "1" "1" "cell-tsep" "1spc") (cwith "3" "3" "1" "1" "cell-rborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-bborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lsep" "1spc") (cwith "3" "3" "1" "1" "cell-rsep" "1spc") (cwith "3" "3" "1" "1" "cell-bsep" "1spc") (cwith "3" "3" "1" "1" "cell-tsep" "1spc") (cwith "3" "3" "1" "1" "cell-rborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-bborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lsep" "1spc") (cwith "3" "3" "1" "1" "cell-rsep" "1spc") (cwith "3" "3" "1" "1" "cell-bsep" "1spc") (cwith "3" "3" "1" "1" "cell-tsep" "1spc") (cwith "4" "8" "4" "4" "cell-rborder" "0.5ln") (cwith "4" "8" "4" "4" "cell-bborder" "0.5ln") (cwith "3" "8" "4" "4" "cell-lsep" "1spc") (cwith "3" "8" "4" "4" "cell-rsep" "1spc") (cwith "3" "8" "4" "4" "cell-bsep" "1spc") (cwith "3" "8" "4" "4" "cell-tsep" "1spc") (cwith "5" "5" "4" "4" "cell-rborder" "0.5ln") (cwith "5" "5" "4" "4" "cell-bborder" "0.5ln") (cwith "5" "5" "4" "4" "cell-lsep" "1spc") (cwith "5" "5" "4" "4" "cell-rsep" "1spc") (cwith "5" "5" "4" "4" "cell-bsep" "1spc") (cwith "5" "5" "4" "4" "cell-tsep" "1spc") (cwith "3" "3" "4" "4" "cell-rborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-bborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-lsep" "1spc") (cwith "3" "3" "4" "4" "cell-rsep" "1spc") (cwith "3" "3" "4" "4" "cell-bsep" "1spc") (cwith "3" "3" "4" "4" "cell-tsep" "1spc") (cwith "3" "3" "4" "4" "cell-rborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-bborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-lsep" "1spc") (cwith "3" "3" "4" "4" "cell-rsep" "1spc") (cwith "3" "3" "4" "4" "cell-bsep" "1spc") (cwith "3" "3" "4" "4" "cell-tsep" "1spc") (cwith "2" "2" "3" "3" "cell-halign" "c") (cwith "2" "2" "5" "5" "cell-halign" "c") (cwith "2" "2" "1" "1" "cell-lsep" "1spc") (cwith "2" "2" "1" "1" "cell-rsep" "1spc") (cwith "2" "2" "1" "1" "cell-bsep" "1spc") (cwith "2" "2" "1" "1" "cell-tsep" "1spc") (cwith "2" "2" "1" "1" "cell-rborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-bborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-lborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-lsep" "1spc") (cwith "2" "2" "1" "1" "cell-rsep" "1spc") (cwith "2" "2" "1" "1" "cell-bsep" "1spc") (cwith "2" "2" "1" "1" "cell-tsep" "1spc") (cwith "2" "2" "1" "1" "cell-rborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-bborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-lborder" "0.5ln") (cwith "2" "2" "1" "1" "cell-lsep" "1spc") (cwith "2" "2" "1" "1" "cell-rsep" "1spc") (cwith "2" "2" "1" "1" "cell-bsep" "1spc") (cwith "2" "2" "1" "1" "cell-tsep" "1spc") (cwith "2" "2" "4" "4" "cell-lsep" "1spc") (cwith "2" "2" "4" "4" "cell-rsep" "1spc") (cwith "2" "2" "4" "4" "cell-bsep" "1spc") (cwith "2" "2" "4" "4" "cell-tsep" "1spc") (cwith "2" "2" "4" "4" "cell-rborder" "0.5ln") (cwith "2" "2" "4" "4" "cell-bborder" "0.5ln") (cwith "2" "2" "4" "4" "cell-lsep" "1spc") (cwith "2" "2" "4" "4" "cell-rsep" "1spc") (cwith "2" "2" "4" "4" "cell-bsep" "1spc") (cwith "2" "2" "4" "4" "cell-tsep" "1spc") (cwith "2" "2" "4" "4" "cell-rborder" "0.5ln") (cwith "2" "2" "4" "4" "cell-bborder" "0.5ln") (cwith "2" "2" "4" "4" "cell-lsep" "1spc") (cwith "2" "2" "4" "4" "cell-rsep" "1spc") (cwith "2" "2" "4" "4" "cell-bsep" "1spc") (cwith "2" "2" "4" "4" "cell-tsep" "1spc") (cwith "1" "1" "3" "3" "cell-halign" "c") (cwith "1" "1" "5" "5" "cell-halign" "c") (cwith "1" "-1" "3" "3" "cell-rborder" "1ln") (cwith "3" "3" "3" "3" "cell-halign" "c") (cwith "3" "3" "5" "5" "cell-halign" "c") (cwith "3" "3" "1" "1" "cell-lsep" "1spc") (cwith "3" "3" "1" "1" "cell-rsep" "1spc") (cwith "3" "3" "1" "1" "cell-bsep" "1spc") (cwith "3" "3" "1" "1" "cell-tsep" "1spc") (cwith "3" "3" "1" "1" "cell-rborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-bborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lsep" "1spc") (cwith "3" "3" "1" "1" "cell-rsep" "1spc") (cwith "3" "3" "1" "1" "cell-bsep" "1spc") (cwith "3" "3" "1" "1" "cell-tsep" "1spc") (cwith "3" "3" "1" "1" "cell-rborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-bborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lsep" "1spc") (cwith "3" "3" "1" "1" "cell-rsep" "1spc") (cwith "3" "3" "1" "1" "cell-bsep" "1spc") (cwith "3" "3" "1" "1" "cell-tsep" "1spc") (cwith "3" "3" "4" "4" "cell-lsep" "1spc") (cwith "3" "3" "4" "4" "cell-rsep" "1spc") (cwith "3" "3" "4" "4" "cell-bsep" "1spc") (cwith "3" "3" "4" "4" "cell-tsep" "1spc") (cwith "3" "3" "4" "4" "cell-rborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-bborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-lsep" "1spc") (cwith "3" "3" "4" "4" "cell-rsep" "1spc") (cwith "3" "3" "4" "4" "cell-bsep" "1spc") (cwith "3" "3" "4" "4" "cell-tsep" "1spc") (cwith "3" "3" "4" "4" "cell-rborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-bborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-lsep" "1spc") (cwith "3" "3" "4" "4" "cell-rsep" "1spc") (cwith "3" "3" "4" "4" "cell-bsep" "1spc") (cwith "3" "3" "4" "4" "cell-tsep" "1spc") (cwith "3" "3" "3" "3" "cell-rborder" "1ln") (cwith "4" "4" "5" "5" "cell-halign" "c") (cwith "4" "4" "4" "4" "cell-lsep" "1spc") (cwith "4" "4" "4" "4" "cell-rsep" "1spc") (cwith "4" "4" "4" "4" "cell-bsep" "1spc") (cwith "4" "4" "4" "4" "cell-tsep" "1spc") (cwith "4" "4" "4" "4" "cell-rborder" "0.5ln") (cwith "4" "4" "4" "4" "cell-bborder" "0.5ln") (cwith "4" "4" "4" "4" "cell-lsep" "1spc") (cwith "4" "4" "4" "4" "cell-rsep" "1spc") (cwith "4" "4" "4" "4" "cell-bsep" "1spc") (cwith "4" "4" "4" "4" "cell-tsep" "1spc") (cwith "4" "4" "4" "4" "cell-rborder" "0.5ln") (cwith "4" "4" "4" "4" "cell-bborder" "0.5ln") (cwith "4" "4" "4" "4" "cell-lsep" "1spc") (cwith "4" "4" "4" "4" "cell-rsep" "1spc") (cwith "4" "4" "4" "4" "cell-bsep" "1spc") (cwith "4" "4" "4" "4" "cell-tsep" "1spc") (cwith "5" "5" "5" "5" "cell-halign" "c") (cwith "5" "5" "4" "4" "cell-lsep" "1spc") (cwith "5" "5" "4" "4" "cell-rsep" "1spc") (cwith "5" "5" "4" "4" "cell-bsep" "1spc") (cwith "5" "5" "4" "4" "cell-tsep" "1spc") (cwith "5" "5" "4" "4" "cell-rborder" "0.5ln") (cwith "5" "5" "4" "4" "cell-bborder" "0.5ln") (cwith "5" "5" "4" "4" "cell-lsep" "1spc") (cwith "5" "5" "4" "4" "cell-rsep" "1spc") (cwith "5" "5" "4" "4" "cell-bsep" "1spc") (cwith "5" "5" "4" "4" "cell-tsep" "1spc") (cwith "5" "5" "4" "4" "cell-rborder" "0.5ln") (cwith "5" "5" "4" "4" "cell-bborder" "0.5ln") (cwith "5" "5" "4" "4" "cell-lsep" "1spc") (cwith "5" "5" "4" "4" "cell-rsep" "1spc") (cwith "5" "5" "4" "4" "cell-bsep" "1spc") (cwith "5" "5" "4" "4" "cell-tsep" "1spc") (cwith "1" "-1" "1" "1" "cell-halign" "c") (cwith "1" "-1" "4" "4" "cell-halign" "c") (cwith "1" "-1" "2" "2" "cell-halign" "c") (cwith "3" "3" "3" "3" "cell-halign" "c") (cwith "3" "3" "5" "5" "cell-halign" "c") (cwith "3" "3" "1" "1" "cell-lsep" "1spc") (cwith "3" "3" "1" "1" "cell-rsep" "1spc") (cwith "3" "3" "1" "1" "cell-bsep" "1spc") (cwith "3" "3" "1" "1" "cell-tsep" "1spc") (cwith "3" "3" "1" "1" "cell-rborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-bborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lsep" "1spc") (cwith "3" "3" "1" "1" "cell-rsep" "1spc") (cwith "3" "3" "1" "1" "cell-bsep" "1spc") (cwith "3" "3" "1" "1" "cell-tsep" "1spc") (cwith "3" "3" "1" "1" "cell-rborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-bborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lborder" "0.5ln") (cwith "3" "3" "1" "1" "cell-lsep" "1spc") (cwith "3" "3" "1" "1" "cell-rsep" "1spc") (cwith "3" "3" "1" "1" "cell-bsep" "1spc") (cwith "3" "3" "1" "1" "cell-tsep" "1spc") (cwith "3" "3" "4" "4" "cell-lsep" "1spc") (cwith "3" "3" "4" "4" "cell-rsep" "1spc") (cwith "3" "3" "4" "4" "cell-bsep" "1spc") (cwith "3" "3" "4" "4" "cell-tsep" "1spc") (cwith "3" "3" "4" "4" "cell-rborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-bborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-lsep" "1spc") (cwith "3" "3" "4" "4" "cell-rsep" "1spc") (cwith "3" "3" "4" "4" "cell-bsep" "1spc") (cwith "3" "3" "4" "4" "cell-tsep" "1spc") (cwith "3" "3" "4" "4" "cell-rborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-bborder" "0.5ln") (cwith "3" "3" "4" "4" "cell-lsep" "1spc") (cwith "3" "3" "4" "4" "cell-rsep" "1spc") (cwith "3" "3" "4" "4" "cell-bsep" "1spc") (cwith "3" "3" "4" "4" "cell-tsep" "1spc") (cwith "3" "3" "3" "3" "cell-rborder" "1ln") (cwith "3" "3" "1" "1" "cell-halign" "c") (cwith "3" "3" "4" "4" "cell-halign" "c") (cwith "3" "3" "2" "2" "cell-halign" "c") (cwith "4" "4" "5" "5" "cell-halign" "c") (cwith "4" "4" "4" "4" "cell-lsep" "1spc") (cwith "4" "4" "4" "4" "cell-rsep" "1spc") (cwith "4" "4" "4" "4" "cell-bsep" "1spc") (cwith "4" "4" "4" "4" "cell-tsep" "1spc") (cwith "4" "4" "4" "4" "cell-rborder" "0.5ln") (cwith "4" "4" "4" "4" "cell-bborder" "0.5ln") (cwith "4" "4" "4" "4" "cell-lsep" "1spc") (cwith "4" "4" "4" "4" "cell-rsep" "1spc") (cwith "4" "4" "4" "4" "cell-bsep" "1spc") (cwith "4" "4" "4" "4" "cell-tsep" "1spc") (cwith "4" "4" "4" "4" "cell-rborder" "0.5ln") (cwith "4" "4" "4" "4" "cell-bborder" "0.5ln") (cwith "4" "4" "4" "4" "cell-lsep" "1spc") (cwith "4" "4" "4" "4" "cell-rsep" "1spc") (cwith "4" "4" "4" "4" "cell-bsep" "1spc") (cwith "4" "4" "4" "4" "cell-tsep" "1spc") (cwith "4" "4" "4" "4" "cell-halign" "c") (cwith "5" "5" "5" "5" "cell-halign" "c") (cwith "5" "5" "4" "4" "cell-lsep" "1spc") (cwith "5" "5" "4" "4" "cell-rsep" "1spc") (cwith "5" "5" "4" "4" "cell-bsep" "1spc") (cwith "5" "5" "4" "4" "cell-tsep" "1spc") (cwith "5" "5" "4" "4" "cell-rborder" "0.5ln") (cwith "5" "5" "4" "4" "cell-bborder" "0.5ln") (cwith "5" "5" "4" "4" "cell-lsep" "1spc") (cwith "5" "5" "4" "4" "cell-rsep" "1spc") (cwith "5" "5" "4" "4" "cell-bsep" "1spc") (cwith "5" "5" "4" "4" "cell-tsep" "1spc") (cwith "5" "5" "4" "4" "cell-rborder" "0.5ln") (cwith "5" "5" "4" "4" "cell-bborder" "0.5ln") (cwith "5" "5" "4" "4" "cell-lsep" "1spc") (cwith "5" "5" "4" "4" "cell-rsep" "1spc") (cwith "5" "5" "4" "4" "cell-bsep" "1spc") (cwith "5" "5" "4" "4" "cell-tsep" "1spc") (cwith "5" "5" "4" "4" "cell-halign" "c") (cwith "4" "5" "3" "3" "cell-halign" "c") (cwith "4" "5" "1" "1" "cell-rborder" "0.5ln") (cwith "4" "5" "1" "1" "cell-bborder" "0.5ln") (cwith "4" "5" "1" "1" "cell-lborder" "0.5ln") (cwith "4" "5" "1" "1" "cell-lsep" "1spc") (cwith "4" "5" "1" "1" "cell-rsep" "1spc") (cwith "4" "5" "1" "1" "cell-bsep" "1spc") (cwith "4" "5" "1" "1" "cell-tsep" "1spc") (cwith "4" "4" "1" "1" "cell-rborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-bborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-lborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-lsep" "1spc") (cwith "4" "4" "1" "1" "cell-rsep" "1spc") (cwith "4" "4" "1" "1" "cell-bsep" "1spc") (cwith "4" "4" "1" "1" "cell-tsep" "1spc") (cwith "4" "5" "3" "3" "cell-rborder" "1ln") (cwith "4" "4" "3" "3" "cell-halign" "c") (cwith "4" "4" "1" "1" "cell-lsep" "1spc") (cwith "4" "4" "1" "1" "cell-rsep" "1spc") (cwith "4" "4" "1" "1" "cell-bsep" "1spc") (cwith "4" "4" "1" "1" "cell-tsep" "1spc") (cwith "4" "4" "1" "1" "cell-rborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-bborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-lborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-lsep" "1spc") (cwith "4" "4" "1" "1" "cell-rsep" "1spc") (cwith "4" "4" "1" "1" "cell-bsep" "1spc") (cwith "4" "4" "1" "1" "cell-tsep" "1spc") (cwith "4" "4" "1" "1" "cell-rborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-bborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-lborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-lsep" "1spc") (cwith "4" "4" "1" "1" "cell-rsep" "1spc") (cwith "4" "4" "1" "1" "cell-bsep" "1spc") (cwith "4" "4" "1" "1" "cell-tsep" "1spc") (cwith "4" "4" "3" "3" "cell-rborder" "1ln") (cwith "5" "5" "3" "3" "cell-halign" "c") (cwith "5" "5" "1" "1" "cell-lsep" "1spc") (cwith "5" "5" "1" "1" "cell-rsep" "1spc") (cwith "5" "5" "1" "1" "cell-bsep" "1spc") (cwith "5" "5" "1" "1" "cell-tsep" "1spc") (cwith "5" "5" "1" "1" "cell-rborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-bborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-lborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-lsep" "1spc") (cwith "5" "5" "1" "1" "cell-rsep" "1spc") (cwith "5" "5" "1" "1" "cell-bsep" "1spc") (cwith "5" "5" "1" "1" "cell-tsep" "1spc") (cwith "5" "5" "1" "1" "cell-rborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-bborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-lborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-lsep" "1spc") (cwith "5" "5" "1" "1" "cell-rsep" "1spc") (cwith "5" "5" "1" "1" "cell-bsep" "1spc") (cwith "5" "5" "1" "1" "cell-tsep" "1spc") (cwith "5" "5" "3" "3" "cell-rborder" "1ln") (cwith "4" "5" "1" "1" "cell-halign" "c") (cwith "4" "5" "2" "2" "cell-halign" "c") (cwith "4" "4" "3" "3" "cell-halign" "c") (cwith "4" "4" "1" "1" "cell-lsep" "1spc") (cwith "4" "4" "1" "1" "cell-rsep" "1spc") (cwith "4" "4" "1" "1" "cell-bsep" "1spc") (cwith "4" "4" "1" "1" "cell-tsep" "1spc") (cwith "4" "4" "1" "1" "cell-rborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-bborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-lborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-lsep" "1spc") (cwith "4" "4" "1" "1" "cell-rsep" "1spc") (cwith "4" "4" "1" "1" "cell-bsep" "1spc") (cwith "4" "4" "1" "1" "cell-tsep" "1spc") (cwith "4" "4" "1" "1" "cell-rborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-bborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-lborder" "0.5ln") (cwith "4" "4" "1" "1" "cell-lsep" "1spc") (cwith "4" "4" "1" "1" "cell-rsep" "1spc") (cwith "4" "4" "1" "1" "cell-bsep" "1spc") (cwith "4" "4" "1" "1" "cell-tsep" "1spc") (cwith "4" "4" "3" "3" "cell-rborder" "1ln") (cwith "4" "4" "1" "1" "cell-halign" "c") (cwith "4" "4" "2" "2" "cell-halign" "c") (cwith "5" "5" "3" "3" "cell-halign" "c") (cwith "5" "5" "1" "1" "cell-lsep" "1spc") (cwith "5" "5" "1" "1" "cell-rsep" "1spc") (cwith "5" "5" "1" "1" "cell-bsep" "1spc") (cwith "5" "5" "1" "1" "cell-tsep" "1spc") (cwith "5" "5" "1" "1" "cell-rborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-bborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-lborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-lsep" "1spc") (cwith "5" "5" "1" "1" "cell-rsep" "1spc") (cwith "5" "5" "1" "1" "cell-bsep" "1spc") (cwith "5" "5" "1" "1" "cell-tsep" "1spc") (cwith "5" "5" "1" "1" "cell-rborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-bborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-lborder" "0.5ln") (cwith "5" "5" "1" "1" "cell-lsep" "1spc") (cwith "5" "5" "1" "1" "cell-rsep" "1spc") (cwith "5" "5" "1" "1" "cell-bsep" "1spc") (cwith "5" "5" "1" "1" "cell-tsep" "1spc") (cwith "5" "5" "3" "3" "cell-rborder" "1ln") (cwith "5" "5" "1" "1" "cell-halign" "c") (cwith "5" "5" "2" "2" "cell-halign" "c") (cwith "6" "6" "3" "3" "cell-halign" "c") (cwith "6" "6" "1" "1" "cell-rborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-bborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lsep" "1spc") (cwith "6" "6" "1" "1" "cell-rsep" "1spc") (cwith "6" "6" "1" "1" "cell-bsep" "1spc") (cwith "6" "6" "1" "1" "cell-tsep" "1spc") (cwith "6" "6" "3" "3" "cell-rborder" "1ln") (cwith "6" "6" "1" "1" "cell-halign" "c") (cwith "6" "6" "2" "2" "cell-halign" "c") (cwith "6" "6" "3" "3" "cell-halign" "c") (cwith "6" "6" "1" "1" "cell-rborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-bborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lsep" "1spc") (cwith "6" "6" "1" "1" "cell-rsep" "1spc") (cwith "6" "6" "1" "1" "cell-bsep" "1spc") (cwith "6" "6" "1" "1" "cell-tsep" "1spc") (cwith "6" "6" "3" "3" "cell-rborder" "1ln") (cwith "6" "6" "3" "3" "cell-halign" "c") (cwith "6" "6" "1" "1" "cell-lsep" "1spc") (cwith "6" "6" "1" "1" "cell-rsep" "1spc") (cwith "6" "6" "1" "1" "cell-bsep" "1spc") (cwith "6" "6" "1" "1" "cell-tsep" "1spc") (cwith "6" "6" "1" "1" "cell-rborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-bborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lsep" "1spc") (cwith "6" "6" "1" "1" "cell-rsep" "1spc") (cwith "6" "6" "1" "1" "cell-bsep" "1spc") (cwith "6" "6" "1" "1" "cell-tsep" "1spc") (cwith "6" "6" "1" "1" "cell-rborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-bborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lsep" "1spc") (cwith "6" "6" "1" "1" "cell-rsep" "1spc") (cwith "6" "6" "1" "1" "cell-bsep" "1spc") (cwith "6" "6" "1" "1" "cell-tsep" "1spc") (cwith "6" "6" "3" "3" "cell-rborder" "1ln") (cwith "6" "6" "1" "1" "cell-halign" "c") (cwith "6" "6" "2" "2" "cell-halign" "c") (cwith "6" "6" "3" "3" "cell-halign" "c") (cwith "6" "6" "1" "1" "cell-lsep" "1spc") (cwith "6" "6" "1" "1" "cell-rsep" "1spc") (cwith "6" "6" "1" "1" "cell-bsep" "1spc") (cwith "6" "6" "1" "1" "cell-tsep" "1spc") (cwith "6" "6" "1" "1" "cell-rborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-bborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lsep" "1spc") (cwith "6" "6" "1" "1" "cell-rsep" "1spc") (cwith "6" "6" "1" "1" "cell-bsep" "1spc") (cwith "6" "6" "1" "1" "cell-tsep" "1spc") (cwith "6" "6" "1" "1" "cell-rborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-bborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lborder" "0.5ln") (cwith "6" "6" "1" "1" "cell-lsep" "1spc") (cwith "6" "6" "1" "1" "cell-rsep" "1spc") (cwith "6" "6" "1" "1" "cell-bsep" "1spc") (cwith "6" "6" "1" "1" "cell-tsep" "1spc") (cwith "6" "6" "3" "3" "cell-rborder" "1ln") (cwith "6" "6" "1" "1" "cell-halign" "c") (cwith "6" "6" "2" "2" "cell-halign" "c") (cwith "7" "7" "3" "3" "cell-halign" "c") (cwith "7" "7" "1" "1" "cell-rborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-bborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lsep" "1spc") (cwith "7" "7" "1" "1" "cell-rsep" "1spc") (cwith "7" "7" "1" "1" "cell-bsep" "1spc") (cwith "7" "7" "1" "1" "cell-tsep" "1spc") (cwith "7" "7" "3" "3" "cell-rborder" "1ln") (cwith "7" "7" "1" "1" "cell-halign" "c") (cwith "7" "7" "2" "2" "cell-halign" "c") (cwith "7" "7" "3" "3" "cell-halign" "c") (cwith "7" "7" "1" "1" "cell-rborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-bborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lsep" "1spc") (cwith "7" "7" "1" "1" "cell-rsep" "1spc") (cwith "7" "7" "1" "1" "cell-bsep" "1spc") (cwith "7" "7" "1" "1" "cell-tsep" "1spc") (cwith "7" "7" "3" "3" "cell-rborder" "1ln") (cwith "7" "7" "3" "3" "cell-halign" "c") (cwith "7" "7" "1" "1" "cell-lsep" "1spc") (cwith "7" "7" "1" "1" "cell-rsep" "1spc") (cwith "7" "7" "1" "1" "cell-bsep" "1spc") (cwith "7" "7" "1" "1" "cell-tsep" "1spc") (cwith "7" "7" "1" "1" "cell-rborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-bborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lsep" "1spc") (cwith "7" "7" "1" "1" "cell-rsep" "1spc") (cwith "7" "7" "1" "1" "cell-bsep" "1spc") (cwith "7" "7" "1" "1" "cell-tsep" "1spc") (cwith "7" "7" "1" "1" "cell-rborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-bborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lsep" "1spc") (cwith "7" "7" "1" "1" "cell-rsep" "1spc") (cwith "7" "7" "1" "1" "cell-bsep" "1spc") (cwith "7" "7" "1" "1" "cell-tsep" "1spc") (cwith "7" "7" "3" "3" "cell-rborder" "1ln") (cwith "7" "7" "1" "1" "cell-halign" "c") (cwith "7" "7" "2" "2" "cell-halign" "c") (cwith "7" "7" "3" "3" "cell-halign" "c") (cwith "7" "7" "1" "1" "cell-lsep" "1spc") (cwith "7" "7" "1" "1" "cell-rsep" "1spc") (cwith "7" "7" "1" "1" "cell-bsep" "1spc") (cwith "7" "7" "1" "1" "cell-tsep" "1spc") (cwith "7" "7" "1" "1" "cell-rborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-bborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lsep" "1spc") (cwith "7" "7" "1" "1" "cell-rsep" "1spc") (cwith "7" "7" "1" "1" "cell-bsep" "1spc") (cwith "7" "7" "1" "1" "cell-tsep" "1spc") (cwith "7" "7" "1" "1" "cell-rborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-bborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lborder" "0.5ln") (cwith "7" "7" "1" "1" "cell-lsep" "1spc") (cwith "7" "7" "1" "1" "cell-rsep" "1spc") (cwith "7" "7" "1" "1" "cell-bsep" "1spc") (cwith "7" "7" "1" "1" "cell-tsep" "1spc") (cwith "7" "7" "3" "3" "cell-rborder" "1ln") (cwith "7" "7" "1" "1" "cell-halign" "c") (cwith "7" "7" "2" "2" "cell-halign" "c") (table (row (cell "Shortcut") (cell "Example") (cell "Wide variant") (cell "Shortcut") (cell "Result")) (row (cell (key "math ~")) (cell (math (wide "x" "~"))) (cell (math (wide "x+y" "~"))) (cell (key "math '")) (cell (math (wide "x" "<acute>")))) (row (cell (key "math ^")) (cell (math (wide "x" "^"))) (cell (math (wide "x+y" "^"))) (cell (key "math `")) (cell (math (wide "x" "<grave>")))) (row (cell (key "math B")) (cell (math (wide "x" "<bar>"))) (cell (math (wide "x+y" "<bar>"))) (cell (key "math .")) (cell (math (wide "x" "<dot>")))) (row (cell (key "math V")) (cell (math (wide "x" "<vect>"))) (cell (math (wide "AB" "<vect>"))) (cell (key "math \"")) (cell (math (wide "x" "<ddot>")))) (row (cell (key "math C")) (cell (math (wide "x" "<check>"))) (cell (math (wide "x+y" "<check>"))) (cell "") (cell "")) (row (cell (key "math U")) (cell (math (wide "x" "<breve>"))) (cell (math (wide "x+y" "<breve>"))) (cell "") (cell "")))))) "Keyboard shortcuts for wide mathemarical accents.") (concat "The same accents may be inserted below the expressions using the " (prefix "math:under") " prefix. For instance, " (key "math:under B x + y") " can be used in order to enter " (math (wide* "x+y" "<bar>")) ".") (section "Semantic editing facilities") (concat "Starting with version 1.0.7.10, " (TeXmacs) " incorporates several features for the semantic editing of mathematical formulas. When used appropriately, this allows you to write documents in which all formulas are at least correct from a syntactical point of view. For instance, in the formulas " (math "a+b") ", the computer will understand that " (math "+") " is an operator which applies to the arguments " (math "a") " and " (math "b") ". Notice that our semantics does not go any further: " (TeXmacs) " is unaware of the mathematical nature of addition.") (concat "Semantic editing does require additional efforts from the user, at least a little adaptation. For instance, it is the user's job to enter multiplications using the shortcut " (key "*") " and function applications using " (key "space") ". Indeed, from the graphical point of view, these operations cannot be distinguished, since they are both printed as invisible whitespace. However, the semantics of these operations is clearly very different.") "Although semantically correct documents are usually not very different from informal presentation-oriented documents as far as typesetting is concerned, the additional user effort may pay off for several reasons:" (itemize (document (concat (item) "Documents with more semantics are for instance useful when using formulas as inputs for a computer algebra system.") (concat (item) "Syntactically correct documents are less likely to contain typos or more intricate mathematical errors.") (concat (item) "For certain editing operations, such as cut and paste, one may directly select subformulas which are meaningful from the syntactical point of view.") (concat (item) "It reduces the risk of using non standard notations, which will be difficult to understand for potential readers of your work."))) "Furthermore, other semantic facilities might be integrated in the feature, such as semantic search and replace, or semantic search on the web." (concat "In order to activate the semantic editing facilities, please toggle " (menu "Edit" "Preferences" "Mathematics" "Semantic editing") ". In the semantic editing mode, several of the structured editing features of " (TeXmacs) " apply to the syntactic structure of the formula, rather than the visual structure of the document. For instance, the " (em "semantic focus") (label "semantic-focus") " is usually a subformula of the " (hlink "current focus" "../text/man-structure.en.tm") ". Similarly, only syntactically meaningful subformulas can be selected when making a selection.") "The semantic focus is useful for several reasons. First of all, it is displayed in green if the formula is syntactically correct and in red if you made an error. This allows to quickly notice any typos while entering a formula. Secondly, if you have any doubt on the precedence of a mathematical operator or relation, then the semantic focus will inform you on the default interpretation: by putting your cursor right next to your operator, the subexpression to which the operator applies will be highlighted. In the case of an addition, or a more general associative operator, all summands are highlighted." (section "Common errors and syntax correction") "By default, the semantic editing mode understands most classical mathematical notations. This is achieved through the use of a carefully designed grammar for mainstream mathematics. Obviously, the use of a fixed grammar may cause the following problems:" (itemize (document (concat (item) "Mathematical formulas frequently contain " (em "ad hoc") " notations. For instance, the formulas might contain some text or meaningful whitespace. Another example of an " (em "ad hoc") " notation is the sign sequence " (math "++-+-+") ". In such cases, the user should " (hlink "explicitly annotate" "semantics/man-semantic-annotation.en.tm") " the appropriate parts of the formula in order to make them semantically meaningful.") (concat (item) "The " (TeXmacs) " grammar used for the interpretation of mathematical formulas may be incomplete or inadequate for certain situations. It is possible to customize or extend the grammar using the standard " (TeXmacs) " macro mechanism. Notations for specific areas may be grouped together in dedicated style packages."))) "Besides these intrinsically hard to avoid problems, the following common and easy-to-make mistakes are a further source of trouble for associating semantics to mathematical formulas:" (itemize (document (concat (item) "Since " (TeXmacs) " is a wysiwyg editor, some of the structure of the document is invisible for the user. For instance, the presence of a mathematical formula " (math "x+y") " is indicated through the use of an italic slant and special spacing. However, in the formula " (math (concat "f" (around* "(" "x" ")"))) " it is easy to type the closing bracket outside the formula, with no visual difference.") (concat (item) "Various mathematical notations are visually ambiguous. For instance, " (math (concat "a*" (around* "(" "b+c" ")"))) " would usually be understood as " (math (concat "a<cdot>" (around* "(" "b+c" ")"))) ", whereas " (math (concat "f" (around* "(" "x+y" ")"))) " rather corresponds to a function application. In the semantic editing mode, the user is expected to resolve this ambiguity by hand by entering multiplications using " (key "*") " and spaces using " (key "space") ". The multiply/apply ambiguity is one of the main sources of syntax errors, since many users do not pay attention to invisible differences. Similarly, the " (math "<wedge>") " glyph could be the logical and or the wedge product. This homoglyph issue will be adressed in more detail in the section on the " (hlink "semantics of mathematical symbols" "semantics/man-semantics-symbols.en.tm") ". ") (concat (item) "It could be that a text was originally written in " (LaTeX) " or an old version of " (TeXmacs) ". In that case, the document contains no special indication on matching brackets or the scopes of big operators. For instance, in the formula " (math (around* "[" "x,y" "[")) ", should we interpret the second bracket as a closing bracket? This is indeed the standard french notation for an interval with an open right end. More generally, all problems that we have mentioned so far tend to be present simultaneously when trying to associate semantics to existing documents."))) (concat "After activation of the semantic editing mode, you may check whether a formula is correct by positioning your cursor inside it and looking at the color of the bounding box of the " (hlink "semantic focus" "semantics/man-semantics.en.tm#semantic-focus") ": a" (nbsp) "green color corresponds to a correct formula and a" (nbsp) "red color indicates an error in the formula. Alternatively, assuming that the focus is on a mathematical formula, you may select " (menu "Focus" "Preferences" "Highlight incorrect formulas") ", in which all incorrect formulas are highlighted inside red boxes.") (concat "For the second kind of easy-to-make errors, " (TeXmacs) " includes an automatic syntax corrector. Assuming that your cursor is inside a formula, you may use " (menu "Edit" "Correct" "Correct all") " for the correction of all formulas in your document, or the correction of the current selection. If the versioning tool is activated, then you may use " (menu "Edit" "Correct" "Correct manually") " to show the differences between the original and the corrected versions. You may then use the versioning tool to go through these differences and select the preferred versions.") (concat "The precise algorithms which are used for the correction may be enabled or disabled from " (menu "Edit" "Preferences" "Mathematics" "Manual correction") ":") (description (document (concat (item* (menu "Remove superfluous invisible operators")) "This algorithm is used in order to remove any superfluous function applications or multiplications. For instance, users who are accustomed to editing ASCII files often type spaces around binary infixes such as addition. Such function applications will be removed by this algorithm.") (concat (item* (menu "Insert missing invisible operators")) "In " (LaTeX) ", multiplications and function applications are never entered explicitly. When importing a " (LaTeX) " document, it is therefore important to detect and insert missing multiplications and function applications.") (concat (item* (menu "Homoglyph substitutions")) "This algorithm may perform some other useful substitutions of symbols by visually similar, but semantically distinct symbols. For instance, the backslash symbol" (nbsp) (math "\\") " is replaced by the binary set differences infix (as in " (math "X<setminus>Y") "), whenever appropriate."))) (concat "From the " (menu "Edit" "Preferences" "Mathematics" "Automatic correction") ", you may also select those corrections algorithms which should be applied automatically whenever you open a file. The various corrections are always carried out when importing a " (LaTeX) " file.") "After syntax correction, the remaining errors indicate genuine typos at worst or non standard or non supported notations at best. We also notice that correct formulas do not necessarily have the intended meaning. In order to check whether the operators indeed apply to the intended arguments, you should keep an eye on the current focus while typing your formulas. " (section "Semantics of mathematical symbols") (concat "The mathematical symbols in " (TeXmacs) " all come with a certain number of properties which correspond to their intended meaning. For instance, " (TeXmacs) " is aware that " (math (op "+")) " is an infix operator, whereas ! is rather a postfix, and , a separator.") (concat (TeXmacs) " has special symbols " (math "<mathe>=2.71828<cdots>") ", " (math "<mathpi>=3.14159<cdots>") " and " (math "<mathi>") " for important mathematical constants, which display differently from the mere characters " (math "e") ", " (math "<pi>") " and " (math "i") ", and which can be entered using the shortcuts " (shortcut "<mathe>") ", " (shortcut "<mathpi>") " and " (shortcut "<mathi>") ". We recommend to systematically use these shortcuts.") (concat "Inversely, semantically distinct symbols may display in a similar way. For instance, the comma separator, as in " (math (concat "f" (around "(" "x,y" ")"))) ", is different from the decimal comma, as in " (math "3<comma>14159<cdots>") ". Notice that the two symbols admit different spacing rules. Semantically distinct symbols which are rendered by the same glyph are called " (em "homoglyphs") ". Notice that our semantics is purely syntactic: for instance, the" (nbsp) (math "+") " infix is commonly used for addition, but sometimes also for the concatenation of strings. Nevertheless, these two uses do not differ from a syntactical point of view, since the" (nbsp) (math "+") " symbol remains a binary infix with the same precedence with respect to other symbols.") (concat "The most confusing homoglyphs are the various invisible symbols supported by " (TeXmacs) ":") (itemize (document (concat (item) "The multiplication, entered by " (key "*") ". Example: " (math "a*b") ".") (concat (item) "Function application, entered by " (key "space") ". Example: " (math "sin x") ".") (concat (item) "An invisible separator, entered by " (shortcut "<nocomma>") ". Example: the matrix " (math (concat "A=" (around "(" (concat "a" (rsub "i<nocomma>j")) ")"))) ".") (concat (item) "An invisible addition, entered by " (shortcut "<noplus>") ". Example: " (math (concat "17<noplus>" (frac* "3" "8"))) ".") (concat (item) "An invisible symbol, entered by " (shortcut "<nosymbol>") ". Example: the increment " (math "<nosymbol>+1") ".") (concat (item) (label "nobracket") "An invisible bracket (mainly for internal use). A matching pair of invisible brackets is entered using " (key "( var") "."))) (concat "Again it is recommended that authors carefully enter these various invisible symbols when appropriate. It is particularly important to distinguish between multiplication and function application, since there is no 100% safe automatic way to make this distinction (we already mentioned the formulas " (math (concat "a" (around "(" "b+c" ")"))) " and " (math (concat "f" (around "(" "x+y" ")"))) " before).") (concat (TeXmacs) " supports two quite general schemes for entering homoglyphs. On the one hand, we often rely on the standard variant system. For instance, " (math "<times>") " and " (math "<ast>") " are obtained using " (shortcut "<times>") " and " (shortcut "<ast>") ". In table" (nbsp) (reference "homoglyph-table") " we have given the complete list of homoglyphs supported by " (TeXmacs) ".") (big-table (block (tformat (table (row (cell "Shortcut") (cell "Glyph") (cell "Example") (cell "Semantics")) (row (cell (key "*")) (cell "") (cell (math "a*b")) (cell "Multiplication")) (row (cell (key "space")) (cell "") (cell (math "sin x")) (cell "Function application")) (row (cell (shortcut "<nocomma>")) (cell "") (cell (math (concat "a" (rsub "i<nocomma>j") "=a" (rsub "j<nocomma>i")))) (cell "Invisible separator")) (row (cell (shortcut "<noplus>")) (cell "") (cell (with "mode" "math" (concat "17<noplus>" (frac* "3" "8")))) (cell "Invisible addition")) (row (cell (shortcut "<nosymbol>")) (cell "") (cell (math "<nosymbol>+1")) (cell "Invisible symbol")) (row (cell (key "( var")) (cell "") (cell (math (concat "<Phi><equiv>" (around* "<nobracket>" (concat "<forall>x,P" (around* "(" "x" ")")) "<nobracket>")))) (cell "Invisible bracket(s)")) (row (cell (key "|")) (cell (math "|")) (cell (math (concat (around* "|" "-x" "|") "=" (around* "|" "x" "|")))) (cell "Absolute value")) (row (cell (key "| var")) (cell (math "|")) (cell (math (around* "{" "x<in><bbb-R>|x<gtr>0" "}"))) (cell "Separating bar")) (row (cell (key "| var var")) (cell (math "|")) (cell (math (around* "<langle>" (concat "a" (rsub "i") (rsup "2") (mid "|") "a" (rsub "j") (rsup "2")) "<rangle>"))) (cell "Extensible middle bar")) (row (cell (key "| var var var var")) (cell (math "|")) (cell (math "11<divides>1001")) (cell "Divides relation")) (row (cell (key ",")) (cell ",") (cell (math (concat "f" (around* "(" "x,y" ")")))) (cell "Comma separator")) (row (cell (key ", var")) (cell ",") (cell (math "123<comma>456")) (cell "Decimal comma")) (row (cell (key ".")) (cell ".") (cell (math "123.456")) (cell "Decimal point")) (row (cell (key ". var")) (cell ".") (cell (math (concat "<mathlambda>x<point>x" (rsup "2")))) (cell "Dot connector")) (row (cell (key "* var var var")) (cell (math "<cdot>")) (cell (math "<b-v><cdot><b-w>")) (cell "Dot multiplication")) (row (cell (key ". var var")) (cell (math "<cdummy>")) (cell (math "<cdummy>+1")) (cell "Dummy widcard")) (row (cell (key ":")) (cell (math ":")) (cell (math (around* "{" (concat "x<in>E:P" (around* "(" "x" ")")) "}"))) (cell "Separator")) (row (cell (shortcut "<of>")) (cell (math "<of>")) (cell (math (concat "x<of>" (math-ss "Int")))) (cell "Type satisfaction")) (row (cell (shortcut "<over>")) (cell (math "<over>")) (cell (math "121<over>11=11")) (cell "Division")) (row (cell (key "\\ var")) (cell (math "\\")) (cell (math "\\x")) (cell "Backslash")) (row (cell (key "\\ var var")) (cell (math "\\")) (cell (math (concat "<bbb-N>" (rsup "<gtr>") "=<bbb-N><setminus>" (around* "{" "0" "}")))) (cell "Set minus")) (row (cell (key "&")) (cell (math "<wedge>")) (cell (math "1=1<wedge>2=2")) (cell "Logical and")) (row (cell (key "* &")) (cell (math "<exterior>")) (cell (math "<mathd>x<exterior><mathd>y")) (cell "Wedge product"))))) (concat (label "homoglyph-table") "Homoglyphs supported by " (TeXmacs) ".")) (section "Customized mathematical semantics") "We have done our best to support most of the classical mathematical notations. Nevertheless, the user may sometimes want to define notations with a non standard semantics. Certain areas may also require special notations which are not supported by default." (concat (TeXmacs) " provides a very simple " (markup "syntax") " primitive, which allows the user to manually override the default syntactical semantics of a formula. Assuming that semantic editing was activated, you may insert the " (markup "syntax") " primitive using " (shortcut "(make 'syntax)") " or " (menu "Insert" "Semantics" "Other") ". The first argument contains the formula as it should be displayed, whereas the second argument contains the formula as it should be interpreted.") (concat "For instance, if we enter " (math "<cal-R>") " as the first argument and " (math "<less>") " as the second one, then the " (math "<cal-R>") " will be interpreted as a binary relation, exactly in the same way as " (math "<less>") ". Moreover, the spacing around " (math "<cal-R>") " will be adapted, so as to mimick the spacing around " (math "<less>") ". In this particular example, we might have obtained the same result by using the " (markup "math-relation") " primitive, which is equivalent to " (markup "syntax") " with" (nbsp) (math "<less>") " as its second argument. Most standard operator types are available from " (menu "Insert" "Semantics") ", or using the " (prefix "math:syntax") " keyboard prefix. In particular, you may use " (shortcut "(make 'math-ignore)") " to simply ignore a formula and " (shortcut "(make 'math-ordinary)") " in order to make the formula behave as an ordinary symbol (such as the letter o).") (concat "The " (markup "syntax") " primitive is especially powerful when used in combination with the " (TeXmacs) " macro language. For instance, consider the formula " (math (concat "C=1/2*<mathpi>*<mathi>*" (big "oint") "f" (around* "(" "z" ")") "*<mathd> z")) ". It is likely that the inteded interpretation of " (math "1/2*<mathpi>*<mathi>") " is " (math (concat "1/" (around* "(" "2*<mathpi>*<mathi>" ")"))) " and not " (math (concat (around* "(" "1/2" ")") "*<mathpi>*<mathi>")) ". Therefore, if we often use the constant " (math "2*<mathpi>*<mathi>") ", then we might want to define a macro" (nbsp) (markup "twopii") " by") (tm-fragment (document (inactive (assign "twopii" (inactive (macro (inactive (syntax (math "2*<pi>*<mathi>") (math "(2*<pi>*<mathi>)"))))))))) (concat "Such macros may be grouped together into a style package with the user's favourite notations. Future versions of " (TeXmacs) " might also provide style packages with notations dedicated to specific" (nbsp) "areas.") (concat "Let us finally notice that there are usually several ways for redefining the semantics of a formula. For instance, an alternative way to define the macro " (markup "twopii") " is using") (tm-fragment (document (inactive (assign "twopii" (inactive (macro (math (around* "<nobracket>" "2*<mathpi>*<mathi>" "<nobracket>")))))))) (concat "where we inserted a pair of invisible brackets around " (math "2*<mathpi>*<mathi>") ". Similarly, in the formula") (equation* (document (concat "<mathe>" (rsup (concat (sqrt "x") "+<mathe>" (rsup (concat (sqrt "log x") "+<mathe>" (rsup (concat (sqrt "log log x") "+" (math-ordinary "<udots><ddots>") "+log log log x")) "+log log x")) "+log x")) ","))) (concat "we may either select the whole formula and give it the semantics of an ordinary symbol, by pressing" (nbsp) (shortcut "(make 'math-ordinary)") ". However, a nicer solution is to only select the subformula " (math (math-ordinary "<udots><ddots>")) ", and give it the semantics of an ordinary symbol. Yet another example is the sign sequence " (math "++-+-+") " mentioned earlier. This sequence can be interpreted correctly by inserting invisible separators between the different signs using the " (key ", space") " shortcut."))))